export interface AlchemyTransfersResponse {
    id:      number;
    result:  Result;
    jsonrpc: string;
}

export interface Result {
    transfers: Transfer[];
    pageKey:   string;
}

export interface Transfer {
    blockNum:        string;
    hash:            string;
    from:            string;
    to:              string;
    value:           number;
    asset:           string;
    category:        string;
    rawContract:     RawContract;
}

export interface RawContract {
    value:   string;
    address: string;
    decimal: string;
}

// Generated by https://quicktype.io

export interface AlchemyTransfersParameters {
    jsonrpc: string;
    id:      number;
    method:  string;
    params:  Param[];
}

export interface Param {
    fromBlock?:         string;
    toBlock?:           string;
    fromAddress?:       string;
    toAddress?:         string;
    contractAddresses?: string[];
    maxCount?:          string;
    excludeZeroValue?:  boolean;
    category?:          string[];
    pageKey?:           string;
}

export type HistoricalTokenValue = {
    block: number,
    value: number
};